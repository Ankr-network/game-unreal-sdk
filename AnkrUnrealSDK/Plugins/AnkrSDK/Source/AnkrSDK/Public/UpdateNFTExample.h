#pragma once

#include "ItemInfo.h"
#include "AnkrClient.h"
#include "UpdateNFTExample.generated.h"

/// UUpdateNFTExample provides various functions to get and update NFT's metadata on the blockchain.
UCLASS(Blueprintable, BlueprintType)
class ANKRSDK_API UUpdateNFTExample : public UAnkrClient
{
	GENERATED_UCLASS_BODY()

public:

//#ifndef DOXYGEN_SHOULD_SKIP_THIS	
	UPROPERTY(BlueprintReadOnly, VisibleAnywhere) FString ContractAddress;
	UPROPERTY(BlueprintReadOnly, VisibleAnywhere) FString ABI;
//#endif /* DOXYGEN_SHOULD_SKIP_THIS */

	/// GetNFTInfo function is used to get an NFT's metadata from the blockchain.
	///
	/// The function requires parameters described below and returns nothing.
	/// Inside the function, A POST request is sent to the Ankr API. The request needs a json body containing a device_id, contract_address, abi_hash, method and args. The format is described in the body section below.
	/// string data will be received in json response.
	///
	/// @param abi_hash The hash of the abi string of the contract.
	/// @param tokenId The id of the token hold by the user.
	/// @param Result A callback delegate that will be triggered once a response is received with data.
	/// 
	/// ### Body
	/// ~~~~~~~~~~~~~~~~~~~~~~~.cpp
	/// {"device_id":"YOUR_DEVICE_ID", "contract_address":"0x159D0A933137f3EC155f43834BDFCd534A8bfd61", "abi_hash":"YOUR_ABI_HASH", "method":"getTokenDetails", "args:"YOUR_TOKEN_ID"}
	/// ~~~~~~~~~~~~~~~~~~~~~~~
	UFUNCTION(BlueprintCallable, Category = "ANKR SDK")
	void GetNFTInfo(FString abi_hash, int tokenId, FAnkrCallCompleteDynamicDelegate Result);

	/// UpdateNFT function is used to update an NFT's metadata on the blockchain and requires the user confirmation through wallet such as metamask.
	///
	/// The function requires parameters described below and returns nothing.
	/// Inside the function, A POST request is sent to the Ankr API. The request needs a json body containing a device_id, contract_address, abi_hash, method and args. The format is described in the body section below.
	/// string data will be received in json response for a "ticket".
	///
	/// @param abi_hash The hash of the abi string of the contract.
	/// @param _item The metadata item to be updated.
	/// @param Result A callback delegate that will be triggered once a response is received with data.
	/// 
	/// ### Body
	/// ~~~~~~~~~~~~~~~~~~~~~~~.cpp
	/// {"device_id":"YOUR_DEVICE_ID","contract_address":"0x159D0A933137f3EC155f43834BDFCd534A8bfd61","abi_hash":"YOUR_ABI_HASH","method":"updateTokenWithSignedMessage","args":[{"tokenId":YOUR_TOKEN_ID,"itemType":YOUR_ITEM_TYPE,"strength":YOUR_STRENGTH,"level":YOUR_LEVEL,"expireTime":YOUR_EXPIRE_TIME,"signature":""}]}
	/// ~~~~~~~~~~~~~~~~~~~~~~~
	UFUNCTION(BlueprintCallable, Category = "ANKR SDK")
	void UpdateNFT(FString abi_hash, FItemInfoStructure _item, FAnkrCallCompleteDynamicDelegate Result);

	/// GetUpdateNFTResult function is used to get the result of the ticket generated by UpdateNFT(FString, FItemInfoStructure, FAnkrCallCompleteDynamicDelegate);
	///
	/// The function requires a parameter described below and returns nothing.
	/// Inside the function, A POST request is sent to the Ankr API. The request needs a json body containing a ticket. The format is described in the body section below.
	/// string data will be received in json response for a "data".
	///
	/// @param ticket The ticket generated by UpdateNFT(FString, FItemInfoStructure, FAnkrCallCompleteDynamicDelegate);
	/// @param Result A callback delegate that will be triggered once a response is received with data.
	/// 
	/// ### Body
	/// ~~~~~~~~~~~~~~~~~~~~~~~.cpp
	/// {"ticket":"YOUR_TICKET"}
	/// ~~~~~~~~~~~~~~~~~~~~~~~
	UFUNCTION(BlueprintCallable, Category = "ANKR SDK")
	void GetUpdateNFTResult(FString ticketId, FAnkrCallCompleteDynamicDelegate Result);
};